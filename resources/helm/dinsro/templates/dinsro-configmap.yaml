apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: "{{ .Release.Namespace }}"
data:
  config.edn: |-
{{ if not (eq .Values.dinsroConfig "-") }}
{{ .Values.dinsroConfig | indent 4 }}
{{- else }}
    {:com.fulcrologic.rad.pathom/config {:trace? false :log-requests? false :log-responses? false}
     :dinsro.components.config/secret-path "/mnt/certs/secret"
     :dinsro.components.notebooks/config {:enabled {{ .Values.notebooks.enabled }}}
     :dinsro.components.seed/enabled {{ .Values.persistence.seed }}
     {{- if .Values.persistence.enabled }}
     :roterski.fulcro.rad.database-adapters.xtdb/databases
      {:main
        {:xtdb.jdbc/connection-pool
         {:dialect #:xtdb{:module "xtdb.jdbc.psql/->dialect"}
          :db-spec {:dbname   "dinsro"
                    :host     "db"
                    :user     "postgres"
                    :password "mysecretpassword"}}
         :xtdb/tx-log         {:xtdb/module     "xtdb.jdbc/->tx-log"
                               :connection-pool :xtdb.jdbc/connection-pool}
         :xtdb/document-store {:xtdb/module     "xtdb.jdbc/->document-store"
                               :connection-pool :xtdb.jdbc/connection-pool}}}
     {{- end }}
     :dinsro.core/modules [{{ if .Values.notebooks.enabled }}"dinsro.components.notebooks"{{- end }}]
     :taoensso.timbre/logging-config
     {:min-level [[#{"_rad.resolvers" "roterski.fulcro.rad.database-adapters.xtdb.generate-resolvers"} :fatal]
                  [#{"dinsro.*"} {{ .Values.logLevel }} ]
                  [#{"*"}        :info ]]
      :level {{ .Values.logLevel }} }}
{{- end}}
