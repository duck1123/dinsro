apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "specter-desktop.fullname" . }}
  labels:
    {{- include "specter-desktop.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "specter-desktop.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "specter-desktop.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "specter-desktop.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # initContainers:
      #   - name: copy-node-config
      #     image: duck1123/specter-config-manager:latest
      #     volumeMounts:
      #       - name: specter
      #         mountPath: /data
      #       - name: config
      #         mountPath: /data-config
      containers:
        - name: copy-node-config
          image: duck1123/specter-config-manager:latest
          volumeMounts:
            - name: specter
              mountPath: /data
            - name: config
              mountPath: /data-config
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.debug }}
          command: ['sleep']
          args: ['infinity']
          {{- else }}
          args:
            - '--host=0.0.0.0'
            #- '--hwibridge'
          {{- end }}
          volumeMounts:
          - mountPath: /data
            name: specter
          - mountPath: /data-config
            name: config
          ports:
          - name: specter
            containerPort: {{.Values.service.port}}
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: specter
          readinessProbe:
            httpGet:
              path: /
              port: specter
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: specter
          persistentVolumeClaim:
            claimName: {{ include "specter-desktop.fullname" . }}
        - name: config
          configMap:
            name: config
